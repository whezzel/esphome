substitutions:
  api_key: !secret outside-power-meter_api_key
  devicename: outside-power-meter
  icon: mdi:gauge
  room: Outside
  device: Power Meter
  #automation:
  # Interval of how often the power is updated
  update_time: 10s
  # Current transformer calibrations:
  # 80A/26.6mA SCT-010: 39571
  # 100A/50mA SCT-013: 26315
  # 120A/40ma SCT-016: 39473 - default kit CT
  # 200A/100mA SCT-024: 26315
  current_cal: "39473"
  # AC Transformer voltage calibration 9VAC Jameco 157041: 37106
  # For Meters >= v1.4 rev3: 3920
  voltage_cal: "3920"
  log_level: DEBUG

esphome:
  name: ${devicename}

esp32:
  board: nodemcu-32s

packages:
  api: !include /config/common/api.yaml
  #binary_sensor: !include /config/common/binary_sensor_ble.yaml
  #esp32_ble_tracker: !include /config/common/esp32_ble_tracker.yaml
  captive_portal: !include /config/common/captive_portal.yaml
  logger: !include /config/common/logger.yaml
#  mqtt: !include /config/common/mqtt.yaml
  ota: !include /config/common/ota.yaml
  sensor: !include /config/common/sensor.yaml
  switch: !include /config/common/switch.yaml
  text_sensor: !include /config/common/text_sensor.yaml
  time: !include /config/common/time.yaml
  web_server: !include /config/common/web_server.yaml
  wifi: !include /config/common/wifi.yaml

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

sensor:
  - platform: atm90e32
    cs_pin: 5
    phase_a:
      voltage:
        name: ${room} ${device} Voltage
        accuracy_decimals: 1
        unit_of_measurement: V
        device_class: voltage
      current:
        name: ${room} ${device} CT1 Current
        accuracy_decimals: 1
        id: "ct1Amps"
        unit_of_measurement: A
        device_class: current
      # The max value for current that the meter can output is 65.535. If you expect to measure current over 65A,
      # divide the gain_ct by 2 (120A CT) or 4 (200A CT) and multiply the current and power values by 2 or 4 by uncommenting the filter below
      #        filters:
      #          - multiply: 2
      power:
        name: ${room} ${device} CT1 Power
        accuracy_decimals: 1
        id: "ct1Watts"
        unit_of_measurement: W
        device_class: power
      #        filters:
      #          - multiply: 2
      reactive_power:
        name: ${room} ${device} CT1 Reactive Power
        accuracy_decimals: 1
        id: "ct1Reactive"
        unit_of_measurement: VAR
      #  device_class: reactive_power
      #        filters:
      #          - multiply: 2
      power_factor:
        name: ${room} ${device} CT1 Power Factor
        device_class: power_factor
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_c:
      current:
        name: ${room} ${device} CT2 Current
        accuracy_decimals: 1
        id: "ct2Amps"
        unit_of_measurement: A
        device_class: current
      # The max value for current that the meter can output is 65.535. If you expect to measure current over 65A,
      # divide the gain_ct by 2 (120A CT) or 4 (200A CT) and multiply the current and power values by 2 or 4 by uncommenting the filter below
      #        filters:
      #          - multiply: 2
      power:
        name: ${room} ${device} CT2 Power
        accuracy_decimals: 1
        id: "ct2Watts"
        unit_of_measurement: W
        device_class: power
      #        filters:
      #          - multiply: 2
      reactive_power:
        name: ${room} ${device} CT2 Reactive Power
        accuracy_decimals: 1
        id: "ct2Reactive"
        unit_of_measurement: VAR
      #  device_class: reactive_power
      #        filters:
      #          - multiply: 2
      power_factor:
        name: ${room} ${device} CT2 Power Factor
        device_class: power_factor
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    frequency:
      name: ${room} ${device} Freq
      unit_of_measurement: Hz
    #  device_class: frequency
    chip_temperature:
      name: ${room} ${device} Chip Temp
      unit_of_measurement: Â°C
      device_class: temperature
    line_frequency: 60Hz
    gain_pga: 2X
    update_interval: ${update_time}
  - platform: template
    name: ${room} ${device} Total Current
    id: "totalAmps"
    lambda: return id(ct1Amps).state + id(ct2Amps).state;
    accuracy_decimals: 1
    unit_of_measurement: A
    device_class: current
    update_interval: ${update_time}
    icon: "mdi:current-ac"
  - platform: template
    name: ${room} ${device} Total Power
    id: "totalWatts"
    lambda: return id(ct1Watts).state + id(ct2Watts).state;
    accuracy_decimals: 1
    unit_of_measurement: W
    device_class: power
    icon: "mdi:power"
    update_interval: ${update_time}
  - platform: template
    name: ${room} ${device} Total Reactive Power
    id: "totalReactivePower"
    lambda: return id(ct1Reactive).state + id(ct2Reactive).state;
    accuracy_decimals: 1
    unit_of_measurement: VAR
    icon: "mdi:flash-circle"
    update_interval: ${update_time}

  - platform: total_daily_energy
    name: ${room} ${device} Total Energy
    power_id: totalWatts
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
