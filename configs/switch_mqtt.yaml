esphome:
  name: ${devicename}

esp8266:
  board: esp01_1m
  restore_from_flash: true

packages:
  captive_portal: !include /config/common/captive_portal.yaml
  logger: !include /config/common/logger.yaml
  mqtt: !include /config/common/mqtt.yaml
  ota: !include /config/common/ota.yaml
  sensor: !include /config/common/sensor.yaml
  switch: !include /config/common/switch.yaml
  text_sensor: !include /config/common/text_sensor.yaml
  time: !include /config/common/time.yaml
  web_server: !include /config/common/web_server.yaml
  wifi: !include /config/common/wifi.yaml

status_led:
  pin:
    number: GPIO16
    inverted: true

output:
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO2
      inverted: true

light:
  - platform: monochromatic
    output: state_led
    id: led

switch:
  - platform: gpio
    pin: GPIO14
    id: relay1
    name: ${room} ${device}
    icon: ${icon}
    restore_mode: ${restore}

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO00
      inverted: true
    id: button1
    on_multi_click:
      - timing:
          - ON for at most 400ms
          - OFF for at least 250ms
        then:
          - logger.log: Single-Click Detected
          - if:
              condition:
                text_sensor.state:
                  id: light_state
                  state: 'off'
              then:
                mqtt.publish:
                  topic: remote/${light_group}/command
                  payload: 'on'
              else:
                mqtt.publish:
                  topic: remote/${light_group}/command
                  payload: 'off'
      - timing:
          - ON for at most 400ms
          - OFF for at most 250ms
          - ON for at most 400ms
          - OFF for at least 250ms
        then:
          - logger.log: Double-Click Detected
          - if:
              condition:
                text_sensor.state:
                  id: automation_state
                  state: 'on'
              then:
                mqtt.publish:
                  topic: remote/${automation_name}/automation
                  payload: 'off'
              else:
                mqtt.publish:
                  topic: remote/${automation_name}/automation
                  payload: 'on'

text_sensor:
  - platform: mqtt_subscribe
    id: automation_state
    topic: remote/${automation_name}/automation
  - platform: mqtt_subscribe
    id: light_state
    topic: ha-core/light/${light_group}/state
    on_value:
      if:
        condition:
          text_sensor.state:
            id: light_state
            state: 'on'
        then:
          - light.turn_on: led
        else:
          - light.turn_off: led
