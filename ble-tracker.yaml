substitutions:
  api_key: !secret ble-tracker_api_key
  devicename: ble-tracker
  room: BLE
  device: Tracker
  update_time: 10s
  log_level: DEBUG
#  log_level: VERY_VERBOSE

esphome:
  name: ${devicename}
  includes:
    - custom_components/lib/OneEuro.h
    - custom_components/ble_dist.h
  on_boot:
    then:
      lambda: |-
        addTracker("pixel_7_pro", "882a359a3a08-6ead-d844-cb20-b88aaa0c");

esp32:
  board: wemos_d1_mini32

packages:
  api: !include /config/common/api.yaml
  binary_sensor: !include /config/common/binary_sensor_ble.yaml
  esp32_ble_tracker: !include /config/common/esp32_ble_tracker.yaml
  captive_portal: !include /config/common/captive_portal.yaml
  logger: !include /config/common/logger.yaml
#  mqtt: !include /config/common/mqtt.yaml
  ota: !include /config/common/ota.yaml
  sensor: !include /config/common/sensor.yaml
#  sensor: !include /config/common/sensor_ble.yaml
  switch: !include /config/common/switch.yaml
  text_sensor: !include /config/common/text_sensor.yaml
  time: !include /config/common/time.yaml
  web_server: !include /config/common/web_server.yaml
  wifi: !include /config/common/wifi.yaml

status_led:
    pin:
      number: 2
      inverted: true

esp32_ble_tracker:
  on_ble_advertise:
    then:
      - lambda: |-
          parseAdvertisement(x);

sensor:
  - platform: template
    name:  ${room} ${device} BLE Pixel 7 Pro Distance
#    internal: true
    disabled_by_default: true
    update_interval: 15s
    unit_of_measurement: "ft"
    device_class: ""
    state_class: "measurement"
    accuracy_decimals: 1
    entity_category: "diagnostic"
    lambda: |-
      return getTracker("pixel_7_pro").get_dist();
