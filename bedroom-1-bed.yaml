substitutions:
  devicename: bedroom-1-bed
  ntp_server: 10.0.2.1
  room: Bedroom 1
  device: Bed

esphome:
  name: ${devicename}
  platform: ESP32
  board: wemos_d1_mini32

time:
  - platform: sntp
    id: sntp_time
    servers: ${ntp_server}

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: !secret domain
  fast_connect: true

  ap:
    ssid: ${devicename}
    password: !secret wifi_pass
    manual_ip:
      static_ip: 192.168.100.2
      gateway: 192.168.100.1
      subnet: 255.255.255.0

captive_portal:

logger:
#  level: VERY_VERBOSE
  level: DEBUG

mqtt:
  broker: !secret mqtt_host
  topic_prefix: esphome
  log_topic: esphome/debug/${devicename}
  birth_message:
    topic: esphome/status/${devicename}
    payload: online
  will_message:
    topic: esphome/status/${devicename}
    payload: offline
  username: !secret mqtt_username
  password: !secret mqtt_password

ota:
    password: !secret esphome_password

web_server:
  port: 80

switch:
  - platform: restart
    name: ${room} ${device} Restart

status_led:
    pin:
      number: 2
      inverted: true

sensor:
  - platform: adc
    pin: GPIO34
    name: ${room} ${device}
    update_interval: .5s
    id: bed_adc
    attenuation: 11db
    filters:
#      - multiply: 3.8
#      - sliding_window_moving_average:
#          window_size: 10
#          send_every: 2 # 10 second updates @ 1 second scan interval.
#          send_first_at: 2
      - exponential_moving_average:
          send_every: 2
          alpha: 0.4

#  - platform: homeassistant
#    internal: true
#    id: "threshold"
#    entity_id: input_number.bedroom_1_bed_threshold
#
#binary_sensor:
#  - platform: template
#    name: "Bedroom 1 Bed Occupancy"
#    lambda: return (id(bed_adc).state < id(threshold).state);
