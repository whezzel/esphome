substitutions:
  devicename: bath-2-fan
  ntp_server: 10.0.2.1
  icon: mdi:fan
  room: Bath 2
  device: Fan
  topic: ha-core/automations/${devicename}/state

esphome:
  name: ${devicename}
  platform: ESP8266
  board: esp01_1m

time:
  - platform: sntp
    id: sntp_time
    servers: ${ntp_server}

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: !secret domain
  fast_connect: true

  ap:
    ssid: ${devicename}
    password: !secret wifi_pass
    manual_ip:
      static_ip: 192.168.100.2
      gateway: 192.168.100.1
      subnet: 255.255.255.0

captive_portal:

logger:
  level: DEBUG

mqtt:
  broker: !secret mqtt_host
  topic_prefix: esphome
  log_topic: esphome/debug/${devicename}
  birth_message:
    topic: esphome/status/${devicename}
    payload: online
  will_message:
    topic: esphome/status/${devicename}
    payload: offline
  username: !secret mqtt_username
  password: !secret mqtt_password

ota:
    password: !secret esphome_password

web_server:
  port: 80

status_led:
  pin:
    number: GPIO16
    inverted: true

output:
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO2
      inverted: true

light:
  - platform: monochromatic
    output: state_led
    id: led

switch:
  - platform: restart
    name: ${room} ${device} Restart
  - platform: gpio
    pin: GPIO14
    id: relay1
    name: ${room} ${device}
    icon: ${icon}
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - light.turn_on: led
    on_turn_off:
      - light.turn_off: led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO00
      inverted: true
    id: button1
    on_multi_click:
      - timing:
          - ON for at most 400ms
          - OFF for at least 250ms
        then:
          - logger.log: Single-Click Detected
          - switch.toggle: relay1
      - timing:
          - ON for at most 400ms
          - OFF for at most 250ms
          - ON for at most 400ms
          - OFF for at least 250ms
        then:
          - logger.log: Double-Click Detected
          - script.execute: toggle_automation

text_sensor:
  - platform: mqtt_subscribe
    id: automation_state
    topic: ${topic}

script:
  - id: toggle_automation
    then:
      - if:
          condition:
            text_sensor.state:
              id: automation_state
              state: 'on'
          then:
            mqtt.publish:
              topic: ${topic}
              payload: "off"
          else:
            mqtt.publish:
              topic: ${topic}
              payload: "on"
